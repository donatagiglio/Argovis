% function data_out = Argovis_get_bgc_profiles_in_shape(url)

% this function returns temperature, salinity, pressure, longitude,
% latitude, time for each profile. More metadata can be read in for
% each profile: to do this, the function
% Argovis_get_profiles_in_shapes needs to be updated editing "vars". Please
% contact us if you have questions on how to do this: we are happy to help.
vars= {...
    'temp' 'temp_qc' ...
    'pres' 'pres_qc' ...
    'psal' 'psal_qc' ...
    'doxy' 'doxy_qc' ...
    'bbp' 'bbp_qc' ...
    'bbp470' 'bbp470_qc' ...
    'bbp532' 'bbp532_qc' ...
    'bbp700' 'bbp700_qc' ...
    'turbidity' 'turbidity_qc' ...
    'cp' 'cp_qc' ...
    'cp660' 'cp660_qc' ...
    'chla' 'chla_qc' ...
    'cdom' 'cdom_qc' ...
    'nitrate' 'nitrate_qc' ...
    'bisulfide' 'bisulfide_qc' ...
    'ph_in_situ_total' 'ph_in_situ_total_qc' ...
    'down_irradiance' 'down_irradiance_qc' ...
    'down_irradiance380' 'down_irradiance380_qc' ...
    'down_irradiance412' 'down_irradiance412_qc' ...
    'down_irradiance443' 'down_irradiance443_qc' ...
    'down_irradiance490' 'down_irradiance490_qc' ...
    'down_irradiance555' 'down_irradiance555_qc' ...
    'up_radiance' 'up_radiance_qc' ...
    'up_radiance412' 'up_radiance412_qc' ...
    'up_radiance443' 'up_radiance443_qc' ...
    'up_radiance490' 'up_radiance490_qc' ...
    'up_radiance555' 'up_radiance555_qc' ...
    'downwelling_par' 'downwelling_par_qc' ...
    'date' 'lon' 'lat' ...
    'cycle_number' 'platform_number' 'x_id'};
for i=1:length(vars)
    eval([vars{i} ' = {};'])
end
opt = weboptions('Timeout',80,'UserAgent', 'http://www.whoishostingthis.com/tools/user-agent/');

disp(url)
tic;data = webread(url,opt);toc;

if ~isempty(data)
    for i=1:length(data)
        for j=1:length(vars)
            eval(['clear ' vars{j} '0'])
        end
        
        for j=1:length(vars)
            if iscell(data)
                if isfield(data{i}.bgcMeas,vars{j})
                    eval([vars{j} '0 = ' ...
                        'return_field_from_cell({data{i}.bgcMeas.' ...
                        vars{j} '});'])
                else
                    try
                        eval([vars{j} '0 = return_field_from_cell({data{i}.' vars{j} '});'])
                    catch
                        %disp([vars{j} ' was not found: is the name entered correct?'])
                    end
                end
            elseif isstruct(data)
                if isfield(data(i).bgcMeas,vars{j})
                    eval([vars{j} '0 = ' ...
                        'return_field_from_cell({data(i).bgcMeas.' ...
                        vars{j} '});'])
                else
                    try
                        eval([vars{j} '0 = return_field_from_cell({data(i).' vars{j} '});'])
                    catch
                        %disp([vars{j} ' was not found: is the name entered correct?'])
                    end
                end
            end
        end
        %
        for j=1:length(vars)
            if exist([vars{j} '0'],'var') && ~strcmp([vars{j} '0'],'date0')
                eval([vars{j} '{end+1} = ' vars{j} '0;'])
            end
        end
        date{end+1} = datenum(str2num(date0(1:4)),str2num(date0(6:7)),str2num(date0(9:10)),...
            str2num(date0(12:13)),str2num(date0(15:16)),str2num(date0(18:19)));
    end
end
for i=1:length(vars)
    eval(['data_out.' vars{i} ' = ' vars{i} ';'])
end
%end
function data_out = return_field_from_cell(data_in)
fx=@(x)any(isempty(x));
ind=cellfun(fx,data_in);
data_in(ind)={nan};
data_out = cell2mat(data_in);
end